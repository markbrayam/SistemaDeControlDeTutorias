#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicesSistemaDeControlDeTutorias.Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SistemaDeControlDeTutorias")]
	public partial class DataClassesSistemaDeControlDeTutoriasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertAsistencia(Asistencia instance);
    partial void UpdateAsistencia(Asistencia instance);
    partial void DeleteAsistencia(Asistencia instance);
    partial void InsertAsistenciaEstudiante(AsistenciaEstudiante instance);
    partial void UpdateAsistenciaEstudiante(AsistenciaEstudiante instance);
    partial void DeleteAsistenciaEstudiante(AsistenciaEstudiante instance);
    partial void InsertComentariosProblematicas(ComentariosProblematicas instance);
    partial void UpdateComentariosProblematicas(ComentariosProblematicas instance);
    partial void DeleteComentariosProblematicas(ComentariosProblematicas instance);
    partial void InsertEstudiante(Estudiante instance);
    partial void UpdateEstudiante(Estudiante instance);
    partial void DeleteEstudiante(Estudiante instance);
    partial void InsertExperienciaEducativa(ExperienciaEducativa instance);
    partial void UpdateExperienciaEducativa(ExperienciaEducativa instance);
    partial void DeleteExperienciaEducativa(ExperienciaEducativa instance);
    partial void InsertPeriodoEscolar(PeriodoEscolar instance);
    partial void UpdatePeriodoEscolar(PeriodoEscolar instance);
    partial void DeletePeriodoEscolar(PeriodoEscolar instance);
    partial void InsertProblematicaAcademica(ProblematicaAcademica instance);
    partial void UpdateProblematicaAcademica(ProblematicaAcademica instance);
    partial void DeleteProblematicaAcademica(ProblematicaAcademica instance);
    partial void InsertProfesor(Profesor instance);
    partial void UpdateProfesor(Profesor instance);
    partial void DeleteProfesor(Profesor instance);
    partial void InsertProgramaEducativo(ProgramaEducativo instance);
    partial void UpdateProgramaEducativo(ProgramaEducativo instance);
    partial void DeleteProgramaEducativo(ProgramaEducativo instance);
    partial void InsertProgramaEducativoProfesor(ProgramaEducativoProfesor instance);
    partial void UpdateProgramaEducativoProfesor(ProgramaEducativoProfesor instance);
    partial void DeleteProgramaEducativoProfesor(ProgramaEducativoProfesor instance);
    partial void InsertTutoriasAcademicas(TutoriasAcademicas instance);
    partial void UpdateTutoriasAcademicas(TutoriasAcademicas instance);
    partial void DeleteTutoriasAcademicas(TutoriasAcademicas instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrador> Administrador
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Asistencia> Asistencia
		{
			get
			{
				return this.GetTable<Asistencia>();
			}
		}
		
		public System.Data.Linq.Table<AsistenciaEstudiante> AsistenciaEstudiante
		{
			get
			{
				return this.GetTable<AsistenciaEstudiante>();
			}
		}
		
		public System.Data.Linq.Table<ComentariosProblematicas> ComentariosProblematicas
		{
			get
			{
				return this.GetTable<ComentariosProblematicas>();
			}
		}
		
		public System.Data.Linq.Table<Estudiante> Estudiante
		{
			get
			{
				return this.GetTable<Estudiante>();
			}
		}
		
		public System.Data.Linq.Table<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this.GetTable<ExperienciaEducativa>();
			}
		}
		
		public System.Data.Linq.Table<PeriodoEscolar> PeriodoEscolar
		{
			get
			{
				return this.GetTable<PeriodoEscolar>();
			}
		}
		
		public System.Data.Linq.Table<ProblematicaAcademica> ProblematicaAcademica
		{
			get
			{
				return this.GetTable<ProblematicaAcademica>();
			}
		}
		
		public System.Data.Linq.Table<Profesor> Profesor
		{
			get
			{
				return this.GetTable<Profesor>();
			}
		}
		
		public System.Data.Linq.Table<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this.GetTable<ProgramaEducativo>();
			}
		}
		
		public System.Data.Linq.Table<ProgramaEducativoProfesor> ProgramaEducativoProfesor
		{
			get
			{
				return this.GetTable<ProgramaEducativoProfesor>();
			}
		}
		
		public System.Data.Linq.Table<TutoriasAcademicas> TutoriasAcademicas
		{
			get
			{
				return this.GetTable<TutoriasAcademicas>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Usuario;
		
		private string _Password;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Administrador()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistencia")]
	public partial class Asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private bool _Presente;
		
		private int _TutoriasAcademicas_Id;
		
		private EntitySet<AsistenciaEstudiante> _AsistenciaEstudiante;
		
		private EntityRef<TutoriasAcademicas> _TutoriasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPresenteChanging(bool value);
    partial void OnPresenteChanged();
    partial void OnTutoriasAcademicas_IdChanging(int value);
    partial void OnTutoriasAcademicas_IdChanged();
    #endregion
		
		public Asistencia()
		{
			this._AsistenciaEstudiante = new EntitySet<AsistenciaEstudiante>(new Action<AsistenciaEstudiante>(this.attach_AsistenciaEstudiante), new Action<AsistenciaEstudiante>(this.detach_AsistenciaEstudiante));
			this._TutoriasAcademicas = default(EntityRef<TutoriasAcademicas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presente", DbType="Bit NOT NULL")]
		public bool Presente
		{
			get
			{
				return this._Presente;
			}
			set
			{
				if ((this._Presente != value))
				{
					this.OnPresenteChanging(value);
					this.SendPropertyChanging();
					this._Presente = value;
					this.SendPropertyChanged("Presente");
					this.OnPresenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutoriasAcademicas_Id", DbType="Int NOT NULL")]
		public int TutoriasAcademicas_Id
		{
			get
			{
				return this._TutoriasAcademicas_Id;
			}
			set
			{
				if ((this._TutoriasAcademicas_Id != value))
				{
					if (this._TutoriasAcademicas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTutoriasAcademicas_IdChanging(value);
					this.SendPropertyChanging();
					this._TutoriasAcademicas_Id = value;
					this.SendPropertyChanged("TutoriasAcademicas_Id");
					this.OnTutoriasAcademicas_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_AsistenciaEstudiante", Storage="_AsistenciaEstudiante", ThisKey="Id", OtherKey="Asistencia_Id")]
		public EntitySet<AsistenciaEstudiante> AsistenciaEstudiante
		{
			get
			{
				return this._AsistenciaEstudiante;
			}
			set
			{
				this._AsistenciaEstudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_Asistencia", Storage="_TutoriasAcademicas", ThisKey="TutoriasAcademicas_Id", OtherKey="Id", IsForeignKey=true)]
		public TutoriasAcademicas TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas.Entity;
			}
			set
			{
				TutoriasAcademicas previousValue = this._TutoriasAcademicas.Entity;
				if (((previousValue != value) 
							|| (this._TutoriasAcademicas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutoriasAcademicas.Entity = null;
						previousValue.Asistencia.Remove(this);
					}
					this._TutoriasAcademicas.Entity = value;
					if ((value != null))
					{
						value.Asistencia.Add(this);
						this._TutoriasAcademicas_Id = value.Id;
					}
					else
					{
						this._TutoriasAcademicas_Id = default(int);
					}
					this.SendPropertyChanged("TutoriasAcademicas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AsistenciaEstudiante(AsistenciaEstudiante entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = this;
		}
		
		private void detach_AsistenciaEstudiante(AsistenciaEstudiante entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AsistenciaEstudiante")]
	public partial class AsistenciaEstudiante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Asistencia_Id;
		
		private int _Estudiante_Id;
		
		private EntityRef<Asistencia> _Asistencia;
		
		private EntityRef<Estudiante> _Estudiante;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAsistencia_IdChanging(int value);
    partial void OnAsistencia_IdChanged();
    partial void OnEstudiante_IdChanging(int value);
    partial void OnEstudiante_IdChanged();
    #endregion
		
		public AsistenciaEstudiante()
		{
			this._Asistencia = default(EntityRef<Asistencia>);
			this._Estudiante = default(EntityRef<Estudiante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asistencia_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Asistencia_Id
		{
			get
			{
				return this._Asistencia_Id;
			}
			set
			{
				if ((this._Asistencia_Id != value))
				{
					if (this._Asistencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAsistencia_IdChanging(value);
					this.SendPropertyChanging();
					this._Asistencia_Id = value;
					this.SendPropertyChanged("Asistencia_Id");
					this.OnAsistencia_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estudiante_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Estudiante_Id
		{
			get
			{
				return this._Estudiante_Id;
			}
			set
			{
				if ((this._Estudiante_Id != value))
				{
					if (this._Estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstudiante_IdChanging(value);
					this.SendPropertyChanging();
					this._Estudiante_Id = value;
					this.SendPropertyChanged("Estudiante_Id");
					this.OnEstudiante_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_AsistenciaEstudiante", Storage="_Asistencia", ThisKey="Asistencia_Id", OtherKey="Id", IsForeignKey=true)]
		public Asistencia Asistencia
		{
			get
			{
				return this._Asistencia.Entity;
			}
			set
			{
				Asistencia previousValue = this._Asistencia.Entity;
				if (((previousValue != value) 
							|| (this._Asistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asistencia.Entity = null;
						previousValue.AsistenciaEstudiante.Remove(this);
					}
					this._Asistencia.Entity = value;
					if ((value != null))
					{
						value.AsistenciaEstudiante.Add(this);
						this._Asistencia_Id = value.Id;
					}
					else
					{
						this._Asistencia_Id = default(int);
					}
					this.SendPropertyChanged("Asistencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_AsistenciaEstudiante", Storage="_Estudiante", ThisKey="Estudiante_Id", OtherKey="Id", IsForeignKey=true)]
		public Estudiante Estudiante
		{
			get
			{
				return this._Estudiante.Entity;
			}
			set
			{
				Estudiante previousValue = this._Estudiante.Entity;
				if (((previousValue != value) 
							|| (this._Estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudiante.Entity = null;
						previousValue.AsistenciaEstudiante.Remove(this);
					}
					this._Estudiante.Entity = value;
					if ((value != null))
					{
						value.AsistenciaEstudiante.Add(this);
						this._Estudiante_Id = value.Id;
					}
					else
					{
						this._Estudiante_Id = default(int);
					}
					this.SendPropertyChanged("Estudiante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComentariosProblematicas")]
	public partial class ComentariosProblematicas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private int _ProblematicaAcademica_Id;
		
		private EntityRef<ProblematicaAcademica> _ProblematicaAcademica;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnProblematicaAcademica_IdChanging(int value);
    partial void OnProblematicaAcademica_IdChanged();
    #endregion
		
		public ComentariosProblematicas()
		{
			this._ProblematicaAcademica = default(EntityRef<ProblematicaAcademica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblematicaAcademica_Id", DbType="Int NOT NULL")]
		public int ProblematicaAcademica_Id
		{
			get
			{
				return this._ProblematicaAcademica_Id;
			}
			set
			{
				if ((this._ProblematicaAcademica_Id != value))
				{
					if (this._ProblematicaAcademica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProblematicaAcademica_IdChanging(value);
					this.SendPropertyChanging();
					this._ProblematicaAcademica_Id = value;
					this.SendPropertyChanged("ProblematicaAcademica_Id");
					this.OnProblematicaAcademica_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProblematicaAcademica_ComentariosProblematicas", Storage="_ProblematicaAcademica", ThisKey="ProblematicaAcademica_Id", OtherKey="Id", IsForeignKey=true)]
		public ProblematicaAcademica ProblematicaAcademica
		{
			get
			{
				return this._ProblematicaAcademica.Entity;
			}
			set
			{
				ProblematicaAcademica previousValue = this._ProblematicaAcademica.Entity;
				if (((previousValue != value) 
							|| (this._ProblematicaAcademica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProblematicaAcademica.Entity = null;
						previousValue.ComentariosProblematicas.Remove(this);
					}
					this._ProblematicaAcademica.Entity = value;
					if ((value != null))
					{
						value.ComentariosProblematicas.Add(this);
						this._ProblematicaAcademica_Id = value.Id;
					}
					else
					{
						this._ProblematicaAcademica_Id = default(int);
					}
					this.SendPropertyChanged("ProblematicaAcademica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estudiante")]
	public partial class Estudiante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Matricula;
		
		private string _Nombres;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _CorreoPersonal;
		
		private string _CorreoInstitucional;
		
		private int _ProgramaEducativo_Id;
		
		private int _Tutor_Id;
		
		private EntitySet<AsistenciaEstudiante> _AsistenciaEstudiante;
		
		private EntityRef<Profesor> _Profesor;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMatriculaChanging(string value);
    partial void OnMatriculaChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnCorreoPersonalChanging(string value);
    partial void OnCorreoPersonalChanged();
    partial void OnCorreoInstitucionalChanging(string value);
    partial void OnCorreoInstitucionalChanged();
    partial void OnProgramaEducativo_IdChanging(int value);
    partial void OnProgramaEducativo_IdChanged();
    partial void OnTutor_IdChanging(int value);
    partial void OnTutor_IdChanged();
    #endregion
		
		public Estudiante()
		{
			this._AsistenciaEstudiante = new EntitySet<AsistenciaEstudiante>(new Action<AsistenciaEstudiante>(this.attach_AsistenciaEstudiante), new Action<AsistenciaEstudiante>(this.detach_AsistenciaEstudiante));
			this._Profesor = default(EntityRef<Profesor>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorreoPersonal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorreoPersonal
		{
			get
			{
				return this._CorreoPersonal;
			}
			set
			{
				if ((this._CorreoPersonal != value))
				{
					this.OnCorreoPersonalChanging(value);
					this.SendPropertyChanging();
					this._CorreoPersonal = value;
					this.SendPropertyChanged("CorreoPersonal");
					this.OnCorreoPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorreoInstitucional", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorreoInstitucional
		{
			get
			{
				return this._CorreoInstitucional;
			}
			set
			{
				if ((this._CorreoInstitucional != value))
				{
					this.OnCorreoInstitucionalChanging(value);
					this.SendPropertyChanging();
					this._CorreoInstitucional = value;
					this.SendPropertyChanged("CorreoInstitucional");
					this.OnCorreoInstitucionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramaEducativo_Id", DbType="Int NOT NULL")]
		public int ProgramaEducativo_Id
		{
			get
			{
				return this._ProgramaEducativo_Id;
			}
			set
			{
				if ((this._ProgramaEducativo_Id != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramaEducativo_IdChanging(value);
					this.SendPropertyChanging();
					this._ProgramaEducativo_Id = value;
					this.SendPropertyChanged("ProgramaEducativo_Id");
					this.OnProgramaEducativo_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tutor_Id", DbType="Int NOT NULL")]
		public int Tutor_Id
		{
			get
			{
				return this._Tutor_Id;
			}
			set
			{
				if ((this._Tutor_Id != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTutor_IdChanging(value);
					this.SendPropertyChanging();
					this._Tutor_Id = value;
					this.SendPropertyChanged("Tutor_Id");
					this.OnTutor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_AsistenciaEstudiante", Storage="_AsistenciaEstudiante", ThisKey="Id", OtherKey="Estudiante_Id")]
		public EntitySet<AsistenciaEstudiante> AsistenciaEstudiante
		{
			get
			{
				return this._AsistenciaEstudiante;
			}
			set
			{
				this._AsistenciaEstudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Estudiante", Storage="_Profesor", ThisKey="Tutor_Id", OtherKey="Id", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._Tutor_Id = value.Id;
					}
					else
					{
						this._Tutor_Id = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Estudiante", Storage="_ProgramaEducativo", ThisKey="ProgramaEducativo_Id", OtherKey="Id", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._ProgramaEducativo_Id = value.Id;
					}
					else
					{
						this._ProgramaEducativo_Id = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AsistenciaEstudiante(AsistenciaEstudiante entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = this;
		}
		
		private void detach_AsistenciaEstudiante(AsistenciaEstudiante entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienciaEducativa")]
	public partial class ExperienciaEducativa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nrc;
		
		private string _Nombre;
		
		private int _ProgramaEducativo_Id;
		
		private EntitySet<ProblematicaAcademica> _ProblematicaAcademica;
		
		private EntitySet<Profesor> _Profesor;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNrcChanging(string value);
    partial void OnNrcChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnProgramaEducativo_IdChanging(int value);
    partial void OnProgramaEducativo_IdChanged();
    #endregion
		
		public ExperienciaEducativa()
		{
			this._ProblematicaAcademica = new EntitySet<ProblematicaAcademica>(new Action<ProblematicaAcademica>(this.attach_ProblematicaAcademica), new Action<ProblematicaAcademica>(this.detach_ProblematicaAcademica));
			this._Profesor = new EntitySet<Profesor>(new Action<Profesor>(this.attach_Profesor), new Action<Profesor>(this.detach_Profesor));
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nrc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nrc
		{
			get
			{
				return this._Nrc;
			}
			set
			{
				if ((this._Nrc != value))
				{
					this.OnNrcChanging(value);
					this.SendPropertyChanging();
					this._Nrc = value;
					this.SendPropertyChanged("Nrc");
					this.OnNrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramaEducativo_Id", DbType="Int NOT NULL")]
		public int ProgramaEducativo_Id
		{
			get
			{
				return this._ProgramaEducativo_Id;
			}
			set
			{
				if ((this._ProgramaEducativo_Id != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramaEducativo_IdChanging(value);
					this.SendPropertyChanging();
					this._ProgramaEducativo_Id = value;
					this.SendPropertyChanged("ProgramaEducativo_Id");
					this.OnProgramaEducativo_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_ProblematicaAcademica", Storage="_ProblematicaAcademica", ThisKey="Id", OtherKey="ExperienciaEducativa_Id")]
		public EntitySet<ProblematicaAcademica> ProblematicaAcademica
		{
			get
			{
				return this._ProblematicaAcademica;
			}
			set
			{
				this._ProblematicaAcademica.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_Profesor", Storage="_Profesor", ThisKey="Id", OtherKey="ExperienciaEducativa_Id")]
		public EntitySet<Profesor> Profesor
		{
			get
			{
				return this._Profesor;
			}
			set
			{
				this._Profesor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ExperienciaEducativa", Storage="_ProgramaEducativo", ThisKey="ProgramaEducativo_Id", OtherKey="Id", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._ProgramaEducativo_Id = value.Id;
					}
					else
					{
						this._ProgramaEducativo_Id = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProblematicaAcademica(ProblematicaAcademica entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = this;
		}
		
		private void detach_ProblematicaAcademica(ProblematicaAcademica entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = null;
		}
		
		private void attach_Profesor(Profesor entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = this;
		}
		
		private void detach_Profesor(Profesor entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodoEscolar")]
	public partial class PeriodoEscolar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _FechaInicio;
		
		private System.DateTime _FechaTermino;
		
		private EntitySet<ProgramaEducativo> _ProgramaEducativo;
		
		private EntitySet<TutoriasAcademicas> _TutoriasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaTerminoChanging(System.DateTime value);
    partial void OnFechaTerminoChanged();
    #endregion
		
		public PeriodoEscolar()
		{
			this._ProgramaEducativo = new EntitySet<ProgramaEducativo>(new Action<ProgramaEducativo>(this.attach_ProgramaEducativo), new Action<ProgramaEducativo>(this.detach_ProgramaEducativo));
			this._TutoriasAcademicas = new EntitySet<TutoriasAcademicas>(new Action<TutoriasAcademicas>(this.attach_TutoriasAcademicas), new Action<TutoriasAcademicas>(this.detach_TutoriasAcademicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaTermino", DbType="DateTime NOT NULL")]
		public System.DateTime FechaTermino
		{
			get
			{
				return this._FechaTermino;
			}
			set
			{
				if ((this._FechaTermino != value))
				{
					this.OnFechaTerminoChanging(value);
					this.SendPropertyChanging();
					this._FechaTermino = value;
					this.SendPropertyChanged("FechaTermino");
					this.OnFechaTerminoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ProgramaEducativo", Storage="_ProgramaEducativo", ThisKey="Id", OtherKey="PeriodoEscolar_Id")]
		public EntitySet<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo;
			}
			set
			{
				this._ProgramaEducativo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_TutoriasAcademicas", Storage="_TutoriasAcademicas", ThisKey="Id", OtherKey="PeriodoEscolar_Id")]
		public EntitySet<TutoriasAcademicas> TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas;
			}
			set
			{
				this._TutoriasAcademicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = this;
		}
		
		private void detach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = null;
		}
		
		private void attach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = this;
		}
		
		private void detach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProblematicaAcademica")]
	public partial class ProblematicaAcademica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Titulo;
		
		private string _Descripcion;
		
		private short _NumeroIncidencias;
		
		private string _Status;
		
		private int _ExperienciaEducativa_Id;
		
		private int _TutoriasAcademicas_Id;
		
		private EntitySet<ComentariosProblematicas> _ComentariosProblematicas;
		
		private EntityRef<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntityRef<TutoriasAcademicas> _TutoriasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnNumeroIncidenciasChanging(short value);
    partial void OnNumeroIncidenciasChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnExperienciaEducativa_IdChanging(int value);
    partial void OnExperienciaEducativa_IdChanged();
    partial void OnTutoriasAcademicas_IdChanging(int value);
    partial void OnTutoriasAcademicas_IdChanged();
    #endregion
		
		public ProblematicaAcademica()
		{
			this._ComentariosProblematicas = new EntitySet<ComentariosProblematicas>(new Action<ComentariosProblematicas>(this.attach_ComentariosProblematicas), new Action<ComentariosProblematicas>(this.detach_ComentariosProblematicas));
			this._ExperienciaEducativa = default(EntityRef<ExperienciaEducativa>);
			this._TutoriasAcademicas = default(EntityRef<TutoriasAcademicas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroIncidencias", DbType="SmallInt NOT NULL")]
		public short NumeroIncidencias
		{
			get
			{
				return this._NumeroIncidencias;
			}
			set
			{
				if ((this._NumeroIncidencias != value))
				{
					this.OnNumeroIncidenciasChanging(value);
					this.SendPropertyChanging();
					this._NumeroIncidencias = value;
					this.SendPropertyChanged("NumeroIncidencias");
					this.OnNumeroIncidenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienciaEducativa_Id", DbType="Int NOT NULL")]
		public int ExperienciaEducativa_Id
		{
			get
			{
				return this._ExperienciaEducativa_Id;
			}
			set
			{
				if ((this._ExperienciaEducativa_Id != value))
				{
					if (this._ExperienciaEducativa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExperienciaEducativa_IdChanging(value);
					this.SendPropertyChanging();
					this._ExperienciaEducativa_Id = value;
					this.SendPropertyChanged("ExperienciaEducativa_Id");
					this.OnExperienciaEducativa_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TutoriasAcademicas_Id", DbType="Int NOT NULL")]
		public int TutoriasAcademicas_Id
		{
			get
			{
				return this._TutoriasAcademicas_Id;
			}
			set
			{
				if ((this._TutoriasAcademicas_Id != value))
				{
					if (this._TutoriasAcademicas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTutoriasAcademicas_IdChanging(value);
					this.SendPropertyChanging();
					this._TutoriasAcademicas_Id = value;
					this.SendPropertyChanged("TutoriasAcademicas_Id");
					this.OnTutoriasAcademicas_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProblematicaAcademica_ComentariosProblematicas", Storage="_ComentariosProblematicas", ThisKey="Id", OtherKey="ProblematicaAcademica_Id")]
		public EntitySet<ComentariosProblematicas> ComentariosProblematicas
		{
			get
			{
				return this._ComentariosProblematicas;
			}
			set
			{
				this._ComentariosProblematicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_ProblematicaAcademica", Storage="_ExperienciaEducativa", ThisKey="ExperienciaEducativa_Id", OtherKey="Id", IsForeignKey=true)]
		public ExperienciaEducativa ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa.Entity;
			}
			set
			{
				ExperienciaEducativa previousValue = this._ExperienciaEducativa.Entity;
				if (((previousValue != value) 
							|| (this._ExperienciaEducativa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienciaEducativa.Entity = null;
						previousValue.ProblematicaAcademica.Remove(this);
					}
					this._ExperienciaEducativa.Entity = value;
					if ((value != null))
					{
						value.ProblematicaAcademica.Add(this);
						this._ExperienciaEducativa_Id = value.Id;
					}
					else
					{
						this._ExperienciaEducativa_Id = default(int);
					}
					this.SendPropertyChanged("ExperienciaEducativa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_ProblematicaAcademica", Storage="_TutoriasAcademicas", ThisKey="TutoriasAcademicas_Id", OtherKey="Id", IsForeignKey=true)]
		public TutoriasAcademicas TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas.Entity;
			}
			set
			{
				TutoriasAcademicas previousValue = this._TutoriasAcademicas.Entity;
				if (((previousValue != value) 
							|| (this._TutoriasAcademicas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutoriasAcademicas.Entity = null;
						previousValue.ProblematicaAcademica.Remove(this);
					}
					this._TutoriasAcademicas.Entity = value;
					if ((value != null))
					{
						value.ProblematicaAcademica.Add(this);
						this._TutoriasAcademicas_Id = value.Id;
					}
					else
					{
						this._TutoriasAcademicas_Id = default(int);
					}
					this.SendPropertyChanged("TutoriasAcademicas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComentariosProblematicas(ComentariosProblematicas entity)
		{
			this.SendPropertyChanging();
			entity.ProblematicaAcademica = this;
		}
		
		private void detach_ComentariosProblematicas(ComentariosProblematicas entity)
		{
			this.SendPropertyChanging();
			entity.ProblematicaAcademica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profesor")]
	public partial class Profesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NumeroDePersonal;
		
		private string _Nombres;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _CorreoPersonal;
		
		private string _CorreoInstitucional;
		
		private string _Password;
		
		private string _EsTutor;
		
		private string _EsCoordinador;
		
		private System.Nullable<bool> _EsJefeCarrera;
		
		private System.Nullable<int> _ExperienciaEducativa_Id;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntitySet<ProgramaEducativoProfesor> _ProgramaEducativoProfesor;
		
		private EntityRef<ExperienciaEducativa> _ExperienciaEducativa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroDePersonalChanging(string value);
    partial void OnNumeroDePersonalChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnCorreoPersonalChanging(string value);
    partial void OnCorreoPersonalChanged();
    partial void OnCorreoInstitucionalChanging(string value);
    partial void OnCorreoInstitucionalChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEsTutorChanging(string value);
    partial void OnEsTutorChanged();
    partial void OnEsCoordinadorChanging(string value);
    partial void OnEsCoordinadorChanged();
    partial void OnEsJefeCarreraChanging(System.Nullable<bool> value);
    partial void OnEsJefeCarreraChanged();
    partial void OnExperienciaEducativa_IdChanging(System.Nullable<int> value);
    partial void OnExperienciaEducativa_IdChanged();
    #endregion
		
		public Profesor()
		{
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._ProgramaEducativoProfesor = new EntitySet<ProgramaEducativoProfesor>(new Action<ProgramaEducativoProfesor>(this.attach_ProgramaEducativoProfesor), new Action<ProgramaEducativoProfesor>(this.detach_ProgramaEducativoProfesor));
			this._ExperienciaEducativa = default(EntityRef<ExperienciaEducativa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroDePersonal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NumeroDePersonal
		{
			get
			{
				return this._NumeroDePersonal;
			}
			set
			{
				if ((this._NumeroDePersonal != value))
				{
					this.OnNumeroDePersonalChanging(value);
					this.SendPropertyChanging();
					this._NumeroDePersonal = value;
					this.SendPropertyChanged("NumeroDePersonal");
					this.OnNumeroDePersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorreoPersonal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorreoPersonal
		{
			get
			{
				return this._CorreoPersonal;
			}
			set
			{
				if ((this._CorreoPersonal != value))
				{
					this.OnCorreoPersonalChanging(value);
					this.SendPropertyChanging();
					this._CorreoPersonal = value;
					this.SendPropertyChanged("CorreoPersonal");
					this.OnCorreoPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorreoInstitucional", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorreoInstitucional
		{
			get
			{
				return this._CorreoInstitucional;
			}
			set
			{
				if ((this._CorreoInstitucional != value))
				{
					this.OnCorreoInstitucionalChanging(value);
					this.SendPropertyChanging();
					this._CorreoInstitucional = value;
					this.SendPropertyChanged("CorreoInstitucional");
					this.OnCorreoInstitucionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsTutor", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EsTutor
		{
			get
			{
				return this._EsTutor;
			}
			set
			{
				if ((this._EsTutor != value))
				{
					this.OnEsTutorChanging(value);
					this.SendPropertyChanging();
					this._EsTutor = value;
					this.SendPropertyChanged("EsTutor");
					this.OnEsTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsCoordinador", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EsCoordinador
		{
			get
			{
				return this._EsCoordinador;
			}
			set
			{
				if ((this._EsCoordinador != value))
				{
					this.OnEsCoordinadorChanging(value);
					this.SendPropertyChanging();
					this._EsCoordinador = value;
					this.SendPropertyChanged("EsCoordinador");
					this.OnEsCoordinadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsJefeCarrera", DbType="Bit")]
		public System.Nullable<bool> EsJefeCarrera
		{
			get
			{
				return this._EsJefeCarrera;
			}
			set
			{
				if ((this._EsJefeCarrera != value))
				{
					this.OnEsJefeCarreraChanging(value);
					this.SendPropertyChanging();
					this._EsJefeCarrera = value;
					this.SendPropertyChanged("EsJefeCarrera");
					this.OnEsJefeCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienciaEducativa_Id", DbType="Int")]
		public System.Nullable<int> ExperienciaEducativa_Id
		{
			get
			{
				return this._ExperienciaEducativa_Id;
			}
			set
			{
				if ((this._ExperienciaEducativa_Id != value))
				{
					if (this._ExperienciaEducativa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExperienciaEducativa_IdChanging(value);
					this.SendPropertyChanging();
					this._ExperienciaEducativa_Id = value;
					this.SendPropertyChanged("ExperienciaEducativa_Id");
					this.OnExperienciaEducativa_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Estudiante", Storage="_Estudiante", ThisKey="Id", OtherKey="Tutor_Id")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ProgramaEducativoProfesor", Storage="_ProgramaEducativoProfesor", ThisKey="Id", OtherKey="Profesor_Id")]
		public EntitySet<ProgramaEducativoProfesor> ProgramaEducativoProfesor
		{
			get
			{
				return this._ProgramaEducativoProfesor;
			}
			set
			{
				this._ProgramaEducativoProfesor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_Profesor", Storage="_ExperienciaEducativa", ThisKey="ExperienciaEducativa_Id", OtherKey="Id", IsForeignKey=true)]
		public ExperienciaEducativa ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa.Entity;
			}
			set
			{
				ExperienciaEducativa previousValue = this._ExperienciaEducativa.Entity;
				if (((previousValue != value) 
							|| (this._ExperienciaEducativa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienciaEducativa.Entity = null;
						previousValue.Profesor.Remove(this);
					}
					this._ExperienciaEducativa.Entity = value;
					if ((value != null))
					{
						value.Profesor.Add(this);
						this._ExperienciaEducativa_Id = value.Id;
					}
					else
					{
						this._ExperienciaEducativa_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExperienciaEducativa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_ProgramaEducativoProfesor(ProgramaEducativoProfesor entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_ProgramaEducativoProfesor(ProgramaEducativoProfesor entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramaEducativo")]
	public partial class ProgramaEducativo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private int _PeriodoEscolar_Id;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntitySet<ProgramaEducativoProfesor> _ProgramaEducativoProfesor;
		
		private EntityRef<PeriodoEscolar> _PeriodoEscolar;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPeriodoEscolar_IdChanging(int value);
    partial void OnPeriodoEscolar_IdChanged();
    #endregion
		
		public ProgramaEducativo()
		{
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			this._ProgramaEducativoProfesor = new EntitySet<ProgramaEducativoProfesor>(new Action<ProgramaEducativoProfesor>(this.attach_ProgramaEducativoProfesor), new Action<ProgramaEducativoProfesor>(this.detach_ProgramaEducativoProfesor));
			this._PeriodoEscolar = default(EntityRef<PeriodoEscolar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodoEscolar_Id", DbType="Int NOT NULL")]
		public int PeriodoEscolar_Id
		{
			get
			{
				return this._PeriodoEscolar_Id;
			}
			set
			{
				if ((this._PeriodoEscolar_Id != value))
				{
					if (this._PeriodoEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodoEscolar_IdChanging(value);
					this.SendPropertyChanging();
					this._PeriodoEscolar_Id = value;
					this.SendPropertyChanged("PeriodoEscolar_Id");
					this.OnPeriodoEscolar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Estudiante", Storage="_Estudiante", ThisKey="Id", OtherKey="ProgramaEducativo_Id")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="Id", OtherKey="ProgramaEducativo_Id")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ProgramaEducativoProfesor", Storage="_ProgramaEducativoProfesor", ThisKey="Id", OtherKey="ProgramaEducativo_Id")]
		public EntitySet<ProgramaEducativoProfesor> ProgramaEducativoProfesor
		{
			get
			{
				return this._ProgramaEducativoProfesor;
			}
			set
			{
				this._ProgramaEducativoProfesor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ProgramaEducativo", Storage="_PeriodoEscolar", ThisKey="PeriodoEscolar_Id", OtherKey="Id", IsForeignKey=true)]
		public PeriodoEscolar PeriodoEscolar
		{
			get
			{
				return this._PeriodoEscolar.Entity;
			}
			set
			{
				PeriodoEscolar previousValue = this._PeriodoEscolar.Entity;
				if (((previousValue != value) 
							|| (this._PeriodoEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodoEscolar.Entity = null;
						previousValue.ProgramaEducativo.Remove(this);
					}
					this._PeriodoEscolar.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativo.Add(this);
						this._PeriodoEscolar_Id = value.Id;
					}
					else
					{
						this._PeriodoEscolar_Id = default(int);
					}
					this.SendPropertyChanged("PeriodoEscolar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_ProgramaEducativoProfesor(ProgramaEducativoProfesor entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_ProgramaEducativoProfesor(ProgramaEducativoProfesor entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramaEducativoProfesor")]
	public partial class ProgramaEducativoProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramaEducativo_Id;
		
		private int _Profesor_Id;
		
		private EntityRef<Profesor> _Profesor;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramaEducativo_IdChanging(int value);
    partial void OnProgramaEducativo_IdChanged();
    partial void OnProfesor_IdChanging(int value);
    partial void OnProfesor_IdChanged();
    #endregion
		
		public ProgramaEducativoProfesor()
		{
			this._Profesor = default(EntityRef<Profesor>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramaEducativo_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramaEducativo_Id
		{
			get
			{
				return this._ProgramaEducativo_Id;
			}
			set
			{
				if ((this._ProgramaEducativo_Id != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramaEducativo_IdChanging(value);
					this.SendPropertyChanging();
					this._ProgramaEducativo_Id = value;
					this.SendPropertyChanged("ProgramaEducativo_Id");
					this.OnProgramaEducativo_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profesor_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Profesor_Id
		{
			get
			{
				return this._Profesor_Id;
			}
			set
			{
				if ((this._Profesor_Id != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfesor_IdChanging(value);
					this.SendPropertyChanging();
					this._Profesor_Id = value;
					this.SendPropertyChanged("Profesor_Id");
					this.OnProfesor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ProgramaEducativoProfesor", Storage="_Profesor", ThisKey="Profesor_Id", OtherKey="Id", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.ProgramaEducativoProfesor.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativoProfesor.Add(this);
						this._Profesor_Id = value.Id;
					}
					else
					{
						this._Profesor_Id = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ProgramaEducativoProfesor", Storage="_ProgramaEducativo", ThisKey="ProgramaEducativo_Id", OtherKey="Id", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.ProgramaEducativoProfesor.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativoProfesor.Add(this);
						this._ProgramaEducativo_Id = value.Id;
					}
					else
					{
						this._ProgramaEducativo_Id = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TutoriasAcademicas")]
	public partial class TutoriasAcademicas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private short _NumeroDeSesion;
		
		private System.DateTime _FechaInicio;
		
		private System.DateTime _FechaTermino;
		
		private System.DateTime _FechaEntrega;
		
		private int _PeriodoEscolar_Id;
		
		private EntitySet<Asistencia> _Asistencia;
		
		private EntitySet<ProblematicaAcademica> _ProblematicaAcademica;
		
		private EntityRef<PeriodoEscolar> _PeriodoEscolar;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroDeSesionChanging(short value);
    partial void OnNumeroDeSesionChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaTerminoChanging(System.DateTime value);
    partial void OnFechaTerminoChanged();
    partial void OnFechaEntregaChanging(System.DateTime value);
    partial void OnFechaEntregaChanged();
    partial void OnPeriodoEscolar_IdChanging(int value);
    partial void OnPeriodoEscolar_IdChanged();
    #endregion
		
		public TutoriasAcademicas()
		{
			this._Asistencia = new EntitySet<Asistencia>(new Action<Asistencia>(this.attach_Asistencia), new Action<Asistencia>(this.detach_Asistencia));
			this._ProblematicaAcademica = new EntitySet<ProblematicaAcademica>(new Action<ProblematicaAcademica>(this.attach_ProblematicaAcademica), new Action<ProblematicaAcademica>(this.detach_ProblematicaAcademica));
			this._PeriodoEscolar = default(EntityRef<PeriodoEscolar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroDeSesion", DbType="SmallInt NOT NULL")]
		public short NumeroDeSesion
		{
			get
			{
				return this._NumeroDeSesion;
			}
			set
			{
				if ((this._NumeroDeSesion != value))
				{
					this.OnNumeroDeSesionChanging(value);
					this.SendPropertyChanging();
					this._NumeroDeSesion = value;
					this.SendPropertyChanged("NumeroDeSesion");
					this.OnNumeroDeSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaTermino", DbType="DateTime NOT NULL")]
		public System.DateTime FechaTermino
		{
			get
			{
				return this._FechaTermino;
			}
			set
			{
				if ((this._FechaTermino != value))
				{
					this.OnFechaTerminoChanging(value);
					this.SendPropertyChanging();
					this._FechaTermino = value;
					this.SendPropertyChanged("FechaTermino");
					this.OnFechaTerminoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEntrega", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEntrega
		{
			get
			{
				return this._FechaEntrega;
			}
			set
			{
				if ((this._FechaEntrega != value))
				{
					this.OnFechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._FechaEntrega = value;
					this.SendPropertyChanged("FechaEntrega");
					this.OnFechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodoEscolar_Id", DbType="Int NOT NULL")]
		public int PeriodoEscolar_Id
		{
			get
			{
				return this._PeriodoEscolar_Id;
			}
			set
			{
				if ((this._PeriodoEscolar_Id != value))
				{
					if (this._PeriodoEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodoEscolar_IdChanging(value);
					this.SendPropertyChanging();
					this._PeriodoEscolar_Id = value;
					this.SendPropertyChanged("PeriodoEscolar_Id");
					this.OnPeriodoEscolar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_Asistencia", Storage="_Asistencia", ThisKey="Id", OtherKey="TutoriasAcademicas_Id")]
		public EntitySet<Asistencia> Asistencia
		{
			get
			{
				return this._Asistencia;
			}
			set
			{
				this._Asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_ProblematicaAcademica", Storage="_ProblematicaAcademica", ThisKey="Id", OtherKey="TutoriasAcademicas_Id")]
		public EntitySet<ProblematicaAcademica> ProblematicaAcademica
		{
			get
			{
				return this._ProblematicaAcademica;
			}
			set
			{
				this._ProblematicaAcademica.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_TutoriasAcademicas", Storage="_PeriodoEscolar", ThisKey="PeriodoEscolar_Id", OtherKey="Id", IsForeignKey=true)]
		public PeriodoEscolar PeriodoEscolar
		{
			get
			{
				return this._PeriodoEscolar.Entity;
			}
			set
			{
				PeriodoEscolar previousValue = this._PeriodoEscolar.Entity;
				if (((previousValue != value) 
							|| (this._PeriodoEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodoEscolar.Entity = null;
						previousValue.TutoriasAcademicas.Remove(this);
					}
					this._PeriodoEscolar.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicas.Add(this);
						this._PeriodoEscolar_Id = value.Id;
					}
					else
					{
						this._PeriodoEscolar_Id = default(int);
					}
					this.SendPropertyChanged("PeriodoEscolar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = this;
		}
		
		private void detach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = null;
		}
		
		private void attach_ProblematicaAcademica(ProblematicaAcademica entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = this;
		}
		
		private void detach_ProblematicaAcademica(ProblematicaAcademica entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = null;
		}
	}
}
#pragma warning restore 1591
